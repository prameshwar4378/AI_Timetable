# Generated by Django 5.2.2 on 2025-06-08 11:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('contact_email', models.EmailField(max_length=254)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='institute_logos/')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('is_class_teacher', models.BooleanField(default=False)),
                ('capable_upto_class', models.PositiveIntegerField(default=12, help_text='Max class grade this teacher can handle')),
            ],
        ),
        migrations.CreateModel(
            name='DailyLectureTiming',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], max_length=10)),
                ('lecture_number', models.PositiveIntegerField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
            options={
                'ordering': ['day', 'lecture_number'],
                'unique_together': {('day', 'lecture_number')},
            },
        ),
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('grade', models.PositiveIntegerField(help_text='Use 0 for Nursery/LKG/UKG')),
                ('section', models.CharField(blank=True, max_length=5, null=True)),
                ('class_teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_teacher_of', to='BackendApp.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='LunchBreakClassAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendApp.classroom')),
                ('lecture_timing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendApp.dailylecturetiming')),
            ],
            options={
                'unique_together': {('lecture_timing', 'classroom')},
            },
        ),
        migrations.CreateModel(
            name='ProxyAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendApp.classroom')),
                ('lecture_timing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendApp.dailylecturetiming')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendApp.subject')),
                ('absent_teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='absent_teacher', to='BackendApp.teacher')),
                ('proxy_teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proxy_teacher', to='BackendApp.teacher')),
            ],
            options={
                'unique_together': {('date', 'lecture_timing', 'classroom')},
            },
        ),
        migrations.CreateModel(
            name='LectureSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], max_length=10)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendApp.classroom')),
                ('lecture_timing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendApp.dailylecturetiming')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendApp.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendApp.teacher')),
            ],
            options={
                'ordering': ['date', 'lecture_timing__lecture_number'],
                'unique_together': {('date', 'lecture_timing', 'classroom')},
            },
        ),
        migrations.CreateModel(
            name='TeacherLeave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('reason', models.TextField(blank=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendApp.teacher')),
            ],
            options={
                'unique_together': {('teacher', 'date')},
            },
        ),
        migrations.CreateModel(
            name='TeacherSubjectClassAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lectures_per_week', models.PositiveIntegerField(default=1)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendApp.classroom')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendApp.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendApp.teacher')),
            ],
            options={
                'unique_together': {('teacher', 'subject', 'classroom')},
            },
        ),
    ]
